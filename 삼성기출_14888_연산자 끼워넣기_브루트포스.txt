#include <stdio.h>
#include <algorithm>

using namespace std;

int n, ret_max = -100000000, ret_min = 100000000;
int num[11];
int oper[4];
int picked[10];
void DFS(int plus, int minus, int multi, int div, int size){
    if(size == n - 1){
        int sum = num[0];
        for(int i = 0; i < n - 1; i++){
            if(picked[i] == 0){
                sum += num[i + 1];
            }
            else if(picked[i] == 1){
                sum -= num[i + 1];
            }
            else if(picked[i] == 2){
                sum *= num[i + 1];
            }
            else if(picked[i] == 3){
                sum /= num[i + 1];
            }
        }
        ret_max = max(ret_max, sum);
        ret_min = min(ret_min, sum);
        return;
    }
    if(plus > 0){
        picked[size] = 0;
        DFS(plus - 1, minus, multi, div, size + 1);
    }
    if(minus > 0){
        picked[size] = 1;
        DFS(plus, minus - 1, multi, div, size + 1);
    }
    if(multi > 0){
        picked[size] = 2;
        DFS(plus, minus, multi - 1, div, size + 1);
    }
    if(div > 0){
        picked[size] = 3;
        DFS(plus, minus, multi, div - 1, size + 1);
    }
}

int main(){
    scanf("%d", &n);
    for(int i = 0; i < n; i++){
        scanf("%d", &num[i]);
    }
    for(int i = 0; i < 4; i++){
        scanf("%d", &oper[i]);
    }
    
    DFS(oper[0], oper[1], oper[2], oper[3], 0);
    
    printf("%d\n%d\n", ret_max, ret_min);
}

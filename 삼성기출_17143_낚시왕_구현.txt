#include <stdio.h>

int r, c, m;
int dy[] = {-1, 1, 0, 0};
int dx[] = {0, 0, 1, -1};
struct SHARK{
    int s, d, z;
};
SHARK map[2][100][100];

int fishing(int cur, int pos){
    int size = 0;
    for(int y = 0; y < r; y++){
        if(map[cur][y][pos].z > 0){
            size = map[cur][y][pos].z;
            map[cur][y][pos] = {0, 0, 0};
            break;
        }
    }
    return size;
}

void move(int cur){
    int next = (cur + 1) % 2;
    for(int y = 0; y < r; y++){
        for(int x = 0; x < c; x++){
            map[next][y][x] = {0, 0, 0};
        }
    }
    
    for(int y = 0; y < r; y++){
        for(int x = 0; x < c; x++){
            if(map[cur][y][x].z != 0){
                SHARK after = map[cur][y][x];
                int ny = y + after.s * dy[after.d];
                int nx = x + after.s * dx[after.d];
                while(ny < 0 || ny >= r || nx < 0 || nx >= c){
                    if(ny >= r){
                        after.d = 0;
                        ny = r - 1 - (ny - r + 1);
                    }
                    else if(ny < 0){
                        after.d = 1;
                        ny = -ny;
                    }
                    else if(nx >= c){
                        after.d = 3;
                        nx = c - 1 + - (nx - c + 1);
                    }
                    else if(nx < 0){
                        after.d = 2;
                        nx = -nx;
                    }
                }
                if(map[next][ny][nx].z < after.z){
                    map[next][ny][nx] = after;
                }
            }
        }
    }
}

int main(){
    scanf("%d %d %d", &r, &c, &m);
    for(int i = 0; i < m; i++){
        int y, x, s, d, z;
        scanf("%d %d %d %d %d", &y, &x, &s, &d, &z);
        map[0][y - 1][x - 1] = {s, d - 1, z};
    }
    
    int cur = 0, ret = 0;
    for(int x = 0; x < c; x++){
        // 상어 낚시
        ret += fishing(cur, x);
        move(cur);
        cur = (cur + 1) % 2;
    }
    
    printf("%d\n", ret);
}
